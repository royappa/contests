#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

int debug = 1;

using namespace std;

int n;
int p10[100];

typedef long long LL;
map<int,LL> f;

char buf[256];

void dec(LL x)
{
	if (x == 0)
	{
		printf("0\n");
		return;
	}

	int i = 0;
	while (x > 0)
	{
		buf[i] = '0'+(x%2LL);
		x /= 2LL;
		i++;
	}
	buf[i] = '\0';
	for (int j = 0; j < i/2; j++)
	{
		char t = buf[j];
		buf[j] = buf[i-j-1];
		buf[i-j-1] = t;
	}
	printf("%s\n", buf);
	return;
}

void onezero()
{
	if (n == 1)
	{
		printf("1\n");
		return;
	}
	f.clear();
	f[0] = 0LL;
	f[1] = 1LL;

	for (int k = 2; ; k++)
	{
		int p = p10[k-1];
		map<int,LL> g;
		for (map<int,LL>::iterator it = f.begin(); it != f.end(); it++)
		{
			int q = it->first;
			LL x = it->second;
			g[((p+q)%n+100000LL*n)%n] = (1LL<<(k-1))+x;
		}
		if (g.count(0) > 0)
		{
			dec(g[0]);
			return;
		}
		for (map<int,LL>::iterator it = g.begin(); it != g.end(); it++)
		{
			if (f.count(it->first) == 0)
			{
				f[it->first] = it->second;
			}
		}
	}
}


int main()
{
	int t;
	cin >> t;

	while (t-- > 0)
	{
		cin >> n;

		p10[0] = 1;
		for (int i = 1; i < 100; i++)
		{
			p10[i] = (p10[i-1] * 10) % n;
		}

		onezero();
	}

	return 0;
}
