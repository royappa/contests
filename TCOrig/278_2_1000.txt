#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class IntegerSequence {
public:
int maxSubsequence(vector <int> A) 
{
	int n = A.size();
	
	int L[n][2];
	L[0][0] = 1;
	L[0][1] = 1;
	
	for (int i = 1; i < n; i++)
	{
		int m0 = 1, m1 = 1;
		for (int j = 0; j < i; j++)
		{
			if (A[i] > A[j])
			{
				m0 = max(m0, L[j][0]+1);
			}
			if (A[i] < A[j])
			{
				m1 = max(m1, L[j][1]+1);
				m1 = max(m1, L[j][0]+1);
			}
		}
		L[i][0] = m0;
		L[i][1] = m1;	
	}
	int m = 0;
	for (int i = 0; i < n; i++)
	{
		m = max(m, max(L[i][0], L[i][1]));
	}
	return n-m;				
}
};


//Powered by [KawigiEdit]