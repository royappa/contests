typedef long long LL;

string getPosition(int N_) 
{
	LL N = N_;
	if (N == 1LL)
	{
		return "(0,0)";
	}
	LL w = 1;
	LL low = 1, high = 1;
	LL row = 1, col = 0;
	LL pw;
	while (N > high)
	{
		low = high+1LL;
		high = low+w*4LL+3LL;
		pw = w;
		w = 2*w+1;
		row--;
		col++;
	}
	int tr, tc;
	if (N >= low && N <= low+pw)
	{
		tc = col;
		tr = row+N-low;
	}
	else if (N <= low+2*pw+1)
	{
		tr = row+pw;
		int d = N-(low+pw);
		tc = col-d;
	}
	else if (N <= low+3*pw+2)
	{
		tc = col-w+1;
		int d = N-(low+2*pw+1);
		tr = row+pw-d;
	}
	else 
	{
		tr = row-1;
		int d = N-(low+3*pw+2);
		tc = (col-w+1)+d;
	}
	char buf[100];
	sprintf(buf, "(%d,%d)", tr, tc);
	return buf;
	
}

Problem Statement
    
Consider all positive integers written in the following manner (you can imagine an infinite spiral).
                 21  22  23  24  25  26
                 20   7   8   9  10 ...
                 19   6   1   2  11 ...
                 18   5   4   3  12 ...
                 17  16  15  14  13 ...
     
     1,3,5,7,
You task is to determine the position (row,column) of a given number N, assuming that the center (number 1) has position (0,0). Rows are numbered from top to bottom, columns are numbered from left to right (for example, number 3 is at (1,1)). Your method should return a string containing the position of N in form (R,C) where R is the row and C is the column. R and C must not contain any leading zeroes.
Definition
    
Class:
SpiralNumbers
Method:
getPosition
Parameters:
int
Returns:
string
Method signature:
string getPosition(int N)
(be sure your method is public)
    

Constraints
-
N will be between 1 and 2,147,483,647, inclusive.
Examples
0)

    
2
Returns: "(0,1)"

1)

    
3
Returns: "(1,1)"

2)

    
7
Returns: "(-1,-1)"

3)

    
17
Returns: "(2,-2)"

4)

    
24
Returns: "(-2,1)"

5)

    
830
Returns: "(-14,3)"

6)

    
765409
Returns: "(-437,221)"

This problem statement is the exclusive and proprietary property of TopCoder, Inc. Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited. (c)2003, TopCoder, Inc. All rights reserved.