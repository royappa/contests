typedef pair<int,int> pi;
typedef vector<pi> vpi;

vector<string> split_nonre(string s, string sep)
{
	char *sC = (char *) malloc(s.size()+1);
	strcpy(sC, s.c_str());
	char *sepC = (char *) sep.c_str();
	char *status = NULL;
	
	char *word;
	vector<string> results;
	while ((word = strtok_r(sC, sepC, &status)) != NULL)
	{
		results.push_back(word);
		sC = NULL;
	}
	return results;
}

int n;
vpi v;
int memo[60];

int f(int p) // max minutes we can watch in [p,n)
{
	if (p == n)
		return 0;
	int& r = memo[p];
	if (r != -1)
		return r;
	r = f(p+1);
	int t1 = v[p].first, t2 = v[p].second;
	int q = -1;
	for (int i = p+1; i < n; i++)
	{
		if (v[i].first >= t2)
		{
			q = i;
			break;
		}
	}
	if (q == -1)
		r >?= t2-t1;
	else
		r >?= (t2-t1)+f(q);
	return r;
}

int mostMinutes(vector <string> programs) 
{	
	for (int i = 0; i < programs.size(); i++)
	{
		vector<string> w = split_nonre(programs[i], " ");
		int h1, m1, h2, m2;
		char ap1, ap2;
		//cout << w[0] <<  " " << w[2] << endl;
		sscanf(w[0].c_str(), "%d:%d%c", &h1, &m1, &ap1);
		sscanf(w[2].c_str(), "%d:%d%c", &h2, &m2, &ap2);
		int t1, t2;
		t1 = h1*60+m1;
		t2 = h2*60+m2;
		if (ap1 == 'P' && h1 != 12) t1 += 12*60;
		if (ap2 == 'P' && h2 != 12) t2 += 12*60;
		if (ap1 == 'A' && h1 == 12) t1 -= 12*60;
		if (ap2 == 'A' && h2 == 12) t2 -= 12*60;
		 
		if (t2 <= t1) t2 += 24*60;
		//cout << t1 << " " << t2 << endl;		
		v.push_back(make_pair(t1, t2));
	}
	
	sort(v.begin(), v.end());
	n = v.size();
	memset(memo, -1, sizeof(memo));
	
	return f(0);
}

Problem Statement
    
I really love watching television. If it were possible, I would watch for 24 hours per day! I'm particularly fond of programs that are broadcast at the same time every day (such as the news, sports and series). Going through the TV guide I selected all the programs that are worth watching.
Each element of programs describes a TV program I'd like to watch. 

An element is formatted as follows: "begintime - endtime" (quotes for clarity), where begintime and endtime are times in 12 hour notation. A valid time in 12 hour notation looks like "hh:mmXX", where hh contains exactly two digits and 01<=hh<=12, mm contains exactly two digits and 00<=mm<=59, and XX is either AM or PM. 

Programs with a later begintime than endtime wrap around the clock to the next day. If begintime and endtime are equal, the program lasts for 24 hours.
I don't want to see parts of TV programs; I either want to see the whole program or none of it. What is the maximum number of minutes that I can spend per day watching my favorite programs?

Definition
    
Class:
TVWatching
Method:
mostMinutes
Parameters:
vector <string>
Returns:
int
Method signature:
int mostMinutes(vector <string> programs)
(be sure your method is public)
    

Constraints
-
programs has between 0 and 50 elements, inclusive.
-
Each element of programs is formatted as described in the problem statement.
Examples
0)

    
{"09:00AM - 12:00PM", "02:00PM - 07:00PM", "09:00PM - 02:00AM"}
Returns: 780
Since the three programs don't overlap, you can watch each of them.
1)

    
{"01:15PM - 11:20PM", "08:00AM - 04:13PM", "03:12PM - 12:06AM", "02:00PM - 02:01PM" }
Returns: 605
Watch the first program. The others have some overlap with it.
2)

    
{"12:34PM - 12:34PM"}
Returns: 1440
Same times indicate a 24 hour TV show.

This problem statement is the exclusive and proprietary property of TopCoder, Inc. Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited. (c)2003, TopCoder, Inc. All rights reserved.