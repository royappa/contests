#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <string.h>

using namespace std;
#define MOD (1000000000+7)

class MappingABC2 {
public:
vector<int> v;
int n;
vector<int> w;
int m;

int memo[51][52][2][52];

int f(int p, int a, int b, int c) {
	if (p == m) {
		return (a != 51 && c != 51 && a < c && b) ? 1 : 0;
	}
	
	int& res = memo[p][a][b][c];
	if (res != -1)
		return res;
		
	res = 0;
	for (int ch = 0; ch <= 2; ch++) {
		int mina = a, maxc = c, sawb = b;
		for (int i = 0; i < n; i++) {
			if (v[i] == w[p]) {
				if (ch == 0) {
					mina = min(mina, i);
				}
				else if (ch == 2) {
					if (maxc == 51 || i > maxc) {
						maxc = i;
					}
				}
				else if (ch == 1) {
					if (mina != 51 && maxc != 51) {
						sawb = sawb || (i > mina && i < maxc);
					}
				}	
			}
			res = (res + f(p+1, mina, sawb, maxc))%MOD;	
		}
	}
	return res;
}

int countStrings(vector <int> t) {
	v = t;
	n = v.size();
	vector<int> z = t;
	sort(z.begin(), z.end());
	z.erase(unique(z.begin(), z.end()), z.end());
	w = z;
	m = w.size();
	
	memset(memo, -1, sizeof(memo));
	return f(0, 51, 0, 51);
}

};


<%:testing-code%>
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!