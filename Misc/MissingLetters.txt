import java.util.*;
import java.util.regex.*;
public class MissingLetters
{
	public String getMissingLetters(String sentence)
	{
		sentence = sentence.toUpperCase();
		String result = "";
		for (char ch = 'A'; ch <= 'Z'; ch++)
		{
			if (!sentence.matches("^.*"+ch+".*$")) result = result + ch;	
		}
		return result;
	}
}


Problem Statement
    
The sentence "A quick brown fox jumps over the lazy dog" contains every single letter in the alphabet. Such sentences are called pangrams. You are to write a method getMissingLetters, which takes a String, sentence, and returns all the letters it is missing (which prevent it from being a pangram). You should ignore the case of the letters in sentence, and your return should be all upper case letters, in alphabetical order.
Definition
    
Class:
MissingLetters
Method:
getMissingLetters
Parameters:
String
Returns:
String
Method signature:
String getMissingLetters(String sentence)
(be sure your method is public)
    

Constraints
-
sentence will contain between 0 and 50 characters, inclusive.
-
Each character of sentence will have ASCII value between 32 and 126, inclusive.
Examples
0)

    
"A quick brown fox jumps over the lazy dog"
Returns: ""
This sentence contains every letter.
1)

    
"A slow yellow fox crawls under the proactive dog"
Returns: "BJKMQZ"

2)

    
"Lions, and tigers, and bears, oh my!"
Returns: "CFJKPQUVWXZ"

3)

    
""
Returns: "ABCDEFGHIJKLMNOPQRSTUVWXYZ"

This problem statement is the exclusive and proprietary property of TopCoder, Inc. Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited. (c)2003, TopCoder, Inc. All rights reserved.