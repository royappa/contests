
select
	p1.last_name,
	p1.first_name,
	p1....
from 
	persons p1
where
	not exists (select 1 from persons p2 
				where 
					p2.last_name = p1.last_name and 
					p2.first_name = p1.first_name and
					p2.home_phone = p1.home_phone and
					p2.create_date > p1.create_date
			 	)
			 	
			 	
			 	
1. persons - original
2. persons_dedupe  - persons records with the LATEST of each unique record by create_date (discarding duplicates)
3. person_mapping
		(original_person_id, dedupe_person_id)
			5					8				
			6					7				
		

4. notes - original, based on "contacts" and "persons" 
5. notes_dedupe where you go through and replace every person_id with their equivalent dedupe_person_id)

	update T  set original_person_id = (select dedupe_person_id from person_mapping p where p.original_person_id = T.original_person_id)
			

/* create the persons_dedupe table */
/* for each unique (last_name,first_name,home_phone) in persons, create ONE record in persons_dedupe */
/* if there is more than one candidate persons record, choose the one with the LAST create_date */
select
	p1.*
into
	persons_dedupe
from 
	persons p1
where
	not exists (select 1 from persons p2 
				where 
					p2.last_name = p1.last_name and 
					p2.first_name = p1.first_name and
					p2.home_phone = p1.home_phone and
					p2.create_date > p1.create_date
			 	)
	
/* creating the persons_mapping table */
/* this will have exactly same number of records as "persons" table */
select
	p1.id as dedupe_person_id,
	p2.id as original_person_id
from 
	persons_dedupe p1,
	persons p2
where
	p1.last_name = p2.last_name and
	p1.first_name = p2.first_name and
	p1.home_phone = p2.home_phone
	
/* need to write one update script to map all the other tables */

	
	